/Users/ryansobol/.rubies/ruby-2.1.0/bin/ruby extconf.rb 
extconf.rb:7:in `<main>': Use RbConfig instead of obsolete and deprecated Config.
checking for srand()... yes
checking for random()... yes
checking for bzero() in string.h,strings.h... yes
checking for strcasecmp()... yes
checking for strncasecmp()... yes
checking for mkdio.h... yes
checking for ruby/encoding.h... yes
creating extconf.h
creating Makefile

make "DESTDIR=" clean

make "DESTDIR="
compiling bluecloth.c
bluecloth.c:36:44: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        document = mkd_string( RSTRING_PTR(text), RSTRING_LEN(text), flags );
                   ~~~~~~~~~~                     ^~~~~~~~~~~~~~~~~
/Users/ryansobol/.rubies/ruby-2.1.0/include/ruby-2.1.0/ruby/ruby.h:843:6: note: expanded from macro 'RSTRING_LEN'
     RSTRING_EMBED_LEN(str) : \
     ^~~~~~~~~~~~~~~~~~~~~~
/Users/ryansobol/.rubies/ruby-2.1.0/include/ruby-2.1.0/ruby/ruby.h:839:6: note: expanded from macro 'RSTRING_EMBED_LEN'
     (long)((RBASIC(str)->flags >> RSTRING_EMBED_LEN_SHIFT) & \
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bluecloth.c:36:44: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        document = mkd_string( RSTRING_PTR(text), RSTRING_LEN(text), flags );
                   ~~~~~~~~~~                     ^~~~~~~~~~~~~~~~~
/Users/ryansobol/.rubies/ruby-2.1.0/include/ruby-2.1.0/ruby/ruby.h:844:28: note: expanded from macro 'RSTRING_LEN'
     RSTRING(str)->as.heap.len)
     ~~~~~~~~~~~~~~~~~~~~~~^~~
2 warnings generated.
compiling Csio.c
compiling css.c
css.c:81:12: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        written = fwrite(res, 1, size, f);
                ~ ^~~~~~~~~~~~~~~~~~~~~~~
1 warning generated.
compiling docheader.c
compiling emmatch.c
compiling generate.c
generate.c:228:14: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("&amp;", f);
                    ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:230:14: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("&lt;", f);
                    ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:232:14: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("%22", f);
                    ^~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:236:14: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("  ", f);
                    ^~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:238:17: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, "%%%02X", c);
                       ^~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:311:28: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                S(ref->title) = (e-title)-2;
                              ~ ~~~~~~~~~^~
generate.c:458:17: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "https:" ), 
                ^~~~~~~~
generate.c:457:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:459:17: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "http:" ), 
                ^~~~~~~
generate.c:457:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:460:17: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "news:" ),
                ^~~~~~~
generate.c:457:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:461:17: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "ftp:" ), 
                ^~~~~~
generate.c:457:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:473:29: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
    for (i=0, p=protocol; i < NRPROTOCOLS; i++, p++)
                          ~ ^ ~~~~~~~~~~~
generate.c:497:35: warning: initializing 'char *' with an expression of type 'const char [11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype imaget = { 0, 0, "<img src=\"", "\"",
                                  ^~~~~~~~~~~~~
generate.c:497:50: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype imaget = { 0, 0, "<img src=\"", "\"",
                                                 ^~~~
generate.c:498:12: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             1, " alt=\"", "\" />", MKD_NOIMAGE|MKD_TAGTEXT, IS_URL };
                                ^~~~~~~~~
generate.c:498:23: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             1, " alt=\"", "\" />", MKD_NOIMAGE|MKD_TAGTEXT, IS_URL };
                                           ^~~~~~~
generate.c:499:35: warning: initializing 'char *' with an expression of type 'const char [10]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype linkt  = { 0, 0, "<a href=\"", "\"",
                                  ^~~~~~~~~~~~
generate.c:499:49: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype linkt  = { 0, 0, "<a href=\"", "\"",
                                                ^~~~
generate.c:500:33: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             0, ">", "</a>", MKD_NOLINKS, IS_URL };
                                ^~~
generate.c:500:38: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             0, ">", "</a>", MKD_NOLINKS, IS_URL };
                                     ^~~~~~
generate.c:510:7: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
      ^~~~~
generate.c:510:17: warning: initializing 'char *' with an expression of type 'const char [11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
                ^~~~~~~~~~~~~
generate.c:510:32: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
                               ^~~~
generate.c:510:41: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
                                        ^~~
generate.c:510:46: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
                                             ^~~~~~~~~
generate.c:511:7: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "raw:", 4, 0, 0, 0, 0, 0, MKD_NOHTML, 0 },
      ^~~~~~
generate.c:512:7: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
      ^~~~~~~
generate.c:512:19: warning: initializing 'char *' with an expression of type 'const char [13]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                  ^~~~~~~~~~~~~~~
generate.c:512:36: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                                   ^~~~
generate.c:512:45: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                                            ^~~
generate.c:512:50: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                                                 ^~~~~~~~~
generate.c:513:7: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
      ^~~~~~~
generate.c:513:19: warning: initializing 'char *' with an expression of type 'const char [14]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                  ^~~~~~~~~~~~~~~~
generate.c:513:37: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                                    ^~~~
generate.c:513:46: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                                             ^~~
generate.c:513:51: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                                                  ^~~~~~~~~
generate.c:514:7: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
      ^~~~~~~~
generate.c:514:20: warning: initializing 'char *' with an expression of type 'const char [14]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                   ^~~~~~~~~~~~~~~~
generate.c:514:38: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                                     ^~~~
generate.c:514:47: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                                              ^~~
generate.c:514:52: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                                                   ^~~~~~~~~
generate.c:527:30: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
    for ( i=0, r=specials; i < NR(specials); i++,r++ ) {
                           ~ ^ ~~~~~~~~~~~~
generate.c:549:19: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            puturl(edit, strlen(edit), f, 0);
            ~~~~~~       ^~~~~~~~~~~~
generate.c:575:12: warning: returning 'const char *' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    return p->ref_prefix ? p->ref_prefix : "fn";
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:592:13: warning: passing 'const char [64]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "<sup id=\"%sref:%d\"><a href=\"#%s:%d\" rel=\"footnote\">%d</a></sup>",
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:632:35: warning: passing 'const char [13]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            if ( ref->height ) Qprintf(f," height=\"%d\"", ref->height);
                                         ^~~~~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:633:35: warning: passing 'const char [12]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            if ( ref->width ) Qprintf(f, " width=\"%d\"", ref->width);
                                         ^~~~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:637:14: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring(" title=\"", f);
                    ^~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:733:25: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '&':   Qstring("&amp;", f); break;
                        ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:734:25: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '>':   Qstring("&gt;", f); break;
                        ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:735:25: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '<':   Qstring("&lt;", f); break;
                        ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:748:10: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("&#", f);
                ^~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:749:13: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, COINTOSS() ? "x%02x;" : "%02d;", *((unsigned char*)(s++)) );
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./config.h:47:21: note: expanded from macro 'COINTOSS'
#       define COINTOSS() (random()&1)
                          ^
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:812:14: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("  ", f);
                    ^~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:823:13: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<del>", f);
            ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:825:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</del>", f);
            ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:840:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<code>", f);
            ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:842:13: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</code>", f);
            ^~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:919:10: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("<a href=\"", f);
                ^~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:922:13: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            mangle("mailto:", 7, f);
                   ^~~~~~~~~
generate.c:745:14: note: passing argument to parameter 's' here
mangle(char *s, int len, MMIOT *f)
             ^
generate.c:925:10: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("\">", f);
                ^~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:927:10: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("</a>", f);
                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:934:10: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("</a>", f);
                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1041:17: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, "&r%cquo;", typeofquote);
                       ^~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1047:13: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "&l%cquo;", typeofquote);
                   ^~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1067:18: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    if ( !(len = strlen(s)) )
               ~ ^~~~~~~~~
generate.c:1089:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'s>",      "rsquo",  0 },
            ^~~~~
generate.c:1089:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'s>",      "rsquo",  0 },
                        ^~~~~~~
generate.c:1090:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'t>",      "rsquo",  0 },
            ^~~~~
generate.c:1090:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'t>",      "rsquo",  0 },
                        ^~~~~~~
generate.c:1091:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'re>",     "rsquo",  0 },
            ^~~~~~
generate.c:1091:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'re>",     "rsquo",  0 },
                        ^~~~~~~
generate.c:1092:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ll>",     "rsquo",  0 },
            ^~~~~~
generate.c:1092:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ll>",     "rsquo",  0 },
                        ^~~~~~~
generate.c:1093:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ve>",     "rsquo",  0 },
            ^~~~~~
generate.c:1093:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ve>",     "rsquo",  0 },
                        ^~~~~~~
generate.c:1094:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'m>",      "rsquo",  0 },
            ^~~~~
generate.c:1094:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'m>",      "rsquo",  0 },
                        ^~~~~~~
generate.c:1095:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'d>",      "rsquo",  0 },
            ^~~~~
generate.c:1095:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'d>",      "rsquo",  0 },
                        ^~~~~~~
generate.c:1096:13: warning: initializing 'char *' with an expression of type 'const char [3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "--",       "mdash",  1 },
            ^~~~
generate.c:1096:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "--",       "mdash",  1 },
                        ^~~~~~~
generate.c:1097:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "<->",      "ndash",  0 },
            ^~~~~
generate.c:1097:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "<->",      "ndash",  0 },
                        ^~~~~~~
generate.c:1098:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  "...",      "hellip", 2 },
            ^~~~~
generate.c:1098:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  "...",      "hellip", 2 },
                        ^~~~~~~~
generate.c:1099:13: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  ". . .",    "hellip", 4 },
            ^~~~~~~
generate.c:1099:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  ". . .",    "hellip", 4 },
                        ^~~~~~~~
generate.c:1100:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(c)",      "copy",   2 },
            ^~~~~
generate.c:1100:25: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(c)",      "copy",   2 },
                        ^~~~~~
generate.c:1101:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(r)",      "reg",    2 },
            ^~~~~
generate.c:1101:25: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(r)",      "reg",    2 },
                        ^~~~~
generate.c:1102:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(tm)",     "trade",  3 },
            ^~~~~~
generate.c:1102:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(tm)",     "trade",  3 },
                        ^~~~~~~
generate.c:1103:13: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "<3/4>",    "frac34", 2 },
            ^~~~~~~
generate.c:1103:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "<3/4>",    "frac34", 2 },
                        ^~~~~~~~
generate.c:1104:13: warning: initializing 'char *' with an expression of type 'const char [9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "<3/4ths>", "frac34", 2 },
            ^~~~~~~~~~
generate.c:1104:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "<3/4ths>", "frac34", 2 },
                        ^~~~~~~~
generate.c:1105:13: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/2>",    "frac12", 2 },
            ^~~~~~~
generate.c:1105:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/2>",    "frac12", 2 },
                        ^~~~~~~~
generate.c:1106:13: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/4>",    "frac14", 2 },
            ^~~~~~~
generate.c:1106:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/4>",    "frac14", 2 },
                        ^~~~~~~~
generate.c:1107:13: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/4th>",  "frac14", 2 },
            ^~~~~~~~~
generate.c:1107:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/4th>",  "frac14", 2 },
                        ^~~~~~~~
generate.c:1108:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '&',  "&#0;",      0,       3 },
            ^~~~~~
generate.c:1126:14: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Qprintf(f, "&%s;", smarties[i].entity);
                           ^~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1148:16: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Qstring("&ldquo;", f);
                                    ^~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1150:16: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Qstring("&rdquo;", f);
                                    ^~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1123:18: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
    for ( i=0; i < NRSMART; i++)
               ~ ^ ~~~~~~~
generate.c:1212:22: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        case 3:     Qstring(tag_text(f) ? "  " : "<br/>", f);
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1188:21: note: expanded from macro 'tag_text'
#define tag_text(f)     (f->flags & MKD_TAGTEXT)
                        ^
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1216:12: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&gt;", f);
                                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1222:12: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&quot;", f);
                                ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1230:16: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Qstring("![", f);
                                    ^~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1267:12: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("<sup>",f);
                                ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1269:12: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("</sup>", f);
                                ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1306:27: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    case '&':   Qstring("&amp;", f);
                                        ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1308:27: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    case '<':   Qstring("&lt;", f);
                                        ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1342:12: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&lt;", f);
                                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1350:12: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&amp;", f);
                                ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1381:10: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("<a name=\"", f);
                ^~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1385:10: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("\"></a>\n", f);
                ^~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1387:16: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qprintf(f, "<h%d>", pp->hnumber);
               ^~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1391:16: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qprintf(f, "</h%d>", pp->hnumber);
               ^~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1397:31: warning: initializing 'char *' with an expression of type 'const char [1]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static char* alignments[] = { "", " align=\"center\"", " align=\"left\"",
                              ^~
generate.c:1397:35: warning: initializing 'char *' with an expression of type 'const char [16]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static char* alignments[] = { "", " align=\"center\"", " align=\"left\"",
                                  ^~~~~~~~~~~~~~~~~~~
generate.c:1397:56: warning: initializing 'char *' with an expression of type 'const char [14]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static char* alignments[] = { "", " align=\"center\"", " align=\"left\"",
                                                       ^~~~~~~~~~~~~~~~~
generate.c:1398:7: warning: initializing 'char *' with an expression of type 'const char [15]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                  " align=\"right\"" };
                                  ^~~~~~~~~~~~~~~~~~
generate.c:1409:13: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<tr>\n", f);
            ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1421:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "<%s%s>",
                   ^~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1425:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "</%s>\n", block);
                   ^~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1431:17: warning: passing 'const char [11]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, "<%s></%s>\n", block, block);
                       ^~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1434:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</tr>\n", f);
            ^~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1479:13: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<table>\n", f);
            ^~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1480:13: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<thead>\n", f);
            ^~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1481:24: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    hcols = splat(hdr, "th", align, 0, f);
                       ^~~~
generate.c:1403:22: note: passing argument to parameter 'block' here
splat(Line *p, char *block, Istring align, int force, MMIOT *f)
                     ^
generate.c:1482:13: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</thead>\n", f);
            ^~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1490:13: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<tbody>\n", f);
            ^~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1492:14: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        splat(body, "td", align, 1, f);
                    ^~~~
generate.c:1403:22: note: passing argument to parameter 'block' here
splat(Line *p, char *block, Istring align, int force, MMIOT *f)
                     ^
generate.c:1493:13: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</tbody>\n", f);
            ^~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1494:13: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</table>\n", f);
            ^~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1505:30: warning: initializing 'char *' with an expression of type 'const char [1]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { "", "<p>", "<p style=\"text-align:center;\">"  };
                             ^~
generate.c:1505:34: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { "", "<p>", "<p style=\"text-align:center;\">"  };
                                 ^~~~~
generate.c:1505:41: warning: initializing 'char *' with an expression of type 'const char [31]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { "", "<p>", "<p style=\"text-align:center;\">"  };
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1506:30: warning: initializing 'char *' with an expression of type 'const char [1]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *End[]   = { "", "</p>","</p>" };
                             ^~
generate.c:1506:34: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *End[]   = { "", "</p>","</p>" };
                                 ^~~~~~
generate.c:1506:41: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *End[]   = { "", "</p>","</p>" };
                                        ^~~~~~
generate.c:1514:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                push("\003\n", 2, f);
                     ^~~~~~~~
generate.c:34:12: note: passing argument to parameter 'bfr' here
push(char *bfr, int size, MMIOT *f)
           ^
generate.c:1520:12: warning: passing 'const char [2]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    push("\n", 1, f);
                         ^~~~
generate.c:34:12: note: passing argument to parameter 'bfr' here
push(char *bfr, int size, MMIOT *f)
           ^
generate.c:1537:13: warning: passing 'const char [12]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<pre><code>", f);
            ^~~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1549:13: warning: passing 'const char [14]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</code></pre>", f);
            ^~~~~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1576:13: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, arguments ? "<%s %s>" : "<%s>", block, arguments);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1581:10: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("\n\n", f);
                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1585:14: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
         Qprintf(f, "</%s>", block);
                    ^~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1596:10: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("<dl>\n", f);
                ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1600:11: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Qstring("<dt>", f);
                        ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1602:11: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Qstring("</dt>\n", f);
                        ^~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1605:23: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            htmlify(p->down, "dd", p->ident, f);
                             ^~~~
generate.c:1572:29: note: passing argument to parameter 'block' here
htmlify(Paragraph *p, char *block, char *arguments, MMIOT *f)
                            ^
generate.c:1609:10: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("</dl>", f);
                ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1618:13: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "<%cl", (typ==UL)?'u':'o');
                   ^~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1620:17: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, " type=\"a\"");
                       ^~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1621:13: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, ">\n");
                   ^~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1624:23: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            htmlify(p->down, "li", p->ident, f);
                             ^~~~
generate.c:1572:29: note: passing argument to parameter 'block' here
htmlify(Paragraph *p, char *block, char *arguments, MMIOT *f)
                            ^
generate.c:1628:13: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "</%cl>\n", (typ==UL)?'u':'o');
                   ^~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1654:19: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        htmlify(p->down, p->ident ? "div" : "blockquote", p->ident, f);
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1572:29: note: passing argument to parameter 'block' here
htmlify(Paragraph *p, char *block, char *arguments, MMIOT *f)
                            ^
generate.c:1668:10: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("<hr />", f);
                ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1702:23: warning: passing 'const char [37]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Csprintf(&m->out, "\n<div class=\"footnotes\">\n<hr/>\n<ol>\n");
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
generate.c:1708:21: warning: passing 'const char [20]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Csprintf(&m->out, "<li id=\"%s:%d\">\n<p>",
                                  ^~~~~~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
generate.c:1711:21: warning: passing 'const char [47]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Csprintf(&m->out, "<a href=\"#%sref:%d\" rev=\"footnote\">&#8617;</a>",
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
generate.c:1713:21: warning: passing 'const char [11]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Csprintf(&m->out, "</p></li>\n");
                                  ^~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
generate.c:1717:23: warning: passing 'const char [14]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Csprintf(&m->out, "</ol>\n</div>\n");
                      ^~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
169 warnings generated.
compiling html5.c
html5.c:15:20: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("ASIDE", 0);
                   ^~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:16:20: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("FOOTER", 0);
                   ^~~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:17:20: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("HEADER", 0);
                   ^~~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:18:20: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("HGROUP", 0);
                   ^~~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:19:20: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("NAV", 0);
                   ^~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:20:20: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("SECTION", 0);
                   ^~~~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:21:20: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("ARTICLE", 0);
                   ^~~~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
7 warnings generated.
compiling markdown.c
markdown.c:104:30: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static struct kw comment = { "!--", 3, 0 };
                             ^~~~~
markdown.c:185:21: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            splitline(t, 3 + (end - T(t->text)) );
            ~~~~~~~~~    ~~^~~~~~~~~~~~~~~~~~~~
markdown.c:753:8: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        char *prefix = "class";
              ^        ~~~~~~~
markdown.c:761:12: warning: assigning to 'char *' from 'const char [3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            prefix="id";
                  ^~~~~
4 warnings generated.
compiling mkdio.c
mkdio.c:270:35: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    mkd_parse_line(bfr, size, &f, flags);
    ~~~~~~~~~~~~~~                ^~~~~
mkdio.c:299:35: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    mkd_parse_line(bfr, size, &f, flags);
    ~~~~~~~~~~~~~~                ^~~~~
2 warnings generated.
compiling resource.c
compiling setup.c
compiling tags.c
tags.c:18:15: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    p->size = strlen(id);
            ~ ^~~~~~~~~~
tags.c:79:8: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("STYLE");
       ^~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:80:8: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("SCRIPT");
       ^~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:81:8: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("ADDRESS");
       ^~~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:82:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("BDO");
       ^~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:83:8: warning: passing 'const char [11]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("BLOCKQUOTE");
       ^~~~~~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:84:8: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("CENTER");
       ^~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:85:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("DFN");
       ^~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:86:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("DIV");
       ^~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:87:8: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("OBJECT");
       ^~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:88:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H1");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:89:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H2");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:90:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H3");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:91:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H4");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:92:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H5");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:93:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H6");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:94:8: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("LISTING");
       ^~~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:95:8: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("NOBR");
       ^~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:96:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("UL");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:97:8: warning: passing 'const char [2]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("P");
       ^~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:98:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("OL");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:99:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("DL");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:100:8: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("PLAINTEXT");
       ^~~~~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:101:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("PRE");
       ^~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:102:8: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("TABLE");
       ^~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:103:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("WBR");
       ^~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:104:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("XMP");
       ^~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:105:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    SC("HR");
       ^~~~
tags.c:74:30: note: expanded from macro 'SC'
#define SC(x)   mkd_define_tag(x, 1)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:106:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    SC("BR");
       ^~~~
tags.c:74:30: note: expanded from macro 'SC'
#define SC(x)   mkd_define_tag(x, 1)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:107:8: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("IFRAME");
       ^~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:108:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("MAP");
       ^~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
31 warnings generated.
compiling version.c
compiling xml.c
xml.c:26:24: warning: returning 'const char [5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '<':   return "&lt;";
                       ^~~~~~
xml.c:27:24: warning: returning 'const char [5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '>':   return "&gt;";
                       ^~~~~~
xml.c:28:24: warning: returning 'const char [6]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '&':   return "&amp;";
                       ^~~~~~~
xml.c:29:24: warning: returning 'const char [7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '"':   return "&quot;";
                       ^~~~~~~~
xml.c:30:24: warning: returning 'const char [7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '\'':  return "&apos;";
                       ^~~~~~~~
xml.c:33:10: warning: returning 'const char [1]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                return "";
                       ^~
xml.c:73:26: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            Cswrite(&f, entity, strlen(entity));
            ~~~~~~~             ^~~~~~~~~~~~~~
7 warnings generated.
compiling xmlpage.c
linking shared-object bluecloth_ext.bundle

make "DESTDIR=" install
/usr/bin/install -c -m 0755 bluecloth_ext.bundle ./.gem.20131226-35295-wv2pnp
installing default bluecloth_ext libraries
